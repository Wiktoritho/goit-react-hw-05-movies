{"version":3,"file":"static/js/531.cde9d9b8.chunk.js","mappings":"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","sources":["hooks/fetchMovieDetails.js","webpack://goit-react-hw-05-movies/./src/pages/movieDetails/MovieDetails.module.css?3b61","pages/movieDetails/MovieDetails.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiData from \"../data/apiData.json\";\n\nconst apiKey = apiData[0].apiKey;\nconst baseUrl = apiData[0].baseUrl;\n\nexport default function useMovieDetails(movieId) {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      if (!movieId) {\n        setMovieDetails(null);\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `${baseUrl}movie/${movieId}?api_key=${apiKey}&language=en-US`\n        );\n        if (response.status === 200) {\n          setMovieDetails(response.data);\n        } else {\n          setError(\"Error fetching movie details.\");\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, error };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__uHDv9\",\"topContainer\":\"MovieDetails_topContainer__mI8Zy\",\"header\":\"MovieDetails_header__fyMx1\",\"image\":\"MovieDetails_image__X2-pj\",\"textContainer\":\"MovieDetails_textContainer__tjy0N\",\"controls\":\"MovieDetails_controls__Zto3N\",\"bottomContainer\":\"MovieDetails_bottomContainer__RrM84\",\"loading\":\"MovieDetails_loading__GmzLB\"};","import React, { lazy, Suspense } from \"react\";\nimport useMovieDetails from \"../../hooks/fetchMovieDetails\";\nimport { useParams, useNavigate, Routes, Route } from \"react-router-dom\";\nimport apiInfo from \"../../data/apiData.json\";\nimport css from \"./MovieDetails.module.css\";\n\nconst Cast = lazy(() => import(\"./cast/Cast\"));\nconst Reviews = lazy(() => import(\"./reviews/Reviews\"));\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const { movieDetails, isLoading, error } = useMovieDetails(movieId);\n\n  const handleClick = (view) => {\n    navigate(`/movies/${movieId}/${view}`);\n  };\n\n  if (isLoading) {\n    return <div className={css.container}>Loading...</div>;\n  }\n\n  if (error) {\n    return <div className={css.container}>Error: {error}</div>;\n  }\n\n  if (!movieDetails) {\n    return <div className={css.container}>Select a movie to view details.</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      <div className={css.topContainer}>\n        <h1 className={css.header}>{movieDetails.title}</h1>\n        <img\n          src={`${apiInfo[0].posterPath}${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n          className={css.image}\n        />\n        <div className={css.textContainer}>\n          <p>Release Date: {movieDetails.release_date}</p>\n          <p>Overview: {movieDetails.overview}</p>\n          <p>Vote Average: {movieDetails.vote_average}</p>\n        </div>\n      </div>\n      <div className={css.controls}>\n        <button onClick={() => handleClick(\"cast\")}>Cast</button>\n        <button onClick={() => handleClick(\"reviews\")}>Reviews</button>\n      </div>\n      <div className={css.bottomContainer}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n"],"names":["apiKey","apiData","baseUrl","Cast","lazy","Reviews","MovieDetails","movieId","useParams","navigate","useNavigate","_useMovieDetails","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","abrupt","axios","concat","sent","status","data","t0","message","stop","apply","arguments","useMovieDetails","handleClick","view","_jsx","className","css","children","_jsxs","title","src","apiInfo","poster_path","alt","release_date","overview","vote_average","onClick","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}